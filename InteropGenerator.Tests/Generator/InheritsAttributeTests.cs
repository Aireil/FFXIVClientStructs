using InteropGenerator.Tests.Helpers;
using Xunit;
using VerifyIG = InteropGenerator.Tests.Helpers.IncrementalGeneratorVerifier<InteropGenerator.Generator.InteropGenerator>;

namespace InteropGenerator.Tests.Generator;

public class InheritsAttributeTests {
    [Fact]
    public async Task BasicFieldInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(0)] public int Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                                [FieldOffset(4)] public int Field4;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [FieldOffset(0)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task BasicFieldInheritanceOffset() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=20)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(16)] public int Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=28)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                                [FieldOffset(20)] public int Field4;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [FieldOffset(16)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task BasicFieldInheritanceExplicitParentOffset() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(0)] public int Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=24)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>(parentOffset: 16)]
                            public partial struct ChildStruct
                            {
                                [FieldOffset(20)] public int Field20;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(16)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [FieldOffset(16)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task ChainedFieldInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(0)] public int BaseStruct_Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop(true)]
                            [Inherits<BaseStruct>]
                            public partial struct MiddleStruct
                            {
                                [FieldOffset(4)] public int MiddleStruct_Field4;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<MiddleStruct>]
                            public partial struct ChildStruct
                            {
                                [FieldOffset(8)] public int Field8;
                            }
                            """;

        const string middleStructInheritanceCode = """
                                                   // <auto-generated/>
                                                   unsafe partial struct MiddleStruct
                                                   {
                                                       /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                       [FieldOffset(0)] public BaseStruct BaseStruct;
                                                       /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                       /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                       [FieldOffset(0)] public int BaseStruct_Field0;
                                                   }
                                                   """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [FieldOffset(0)] public int BaseStruct_Field0;
                                                      /// <summary>Inherited parent class accessor for <see cref="MiddleStruct">MiddleStruct</see></summary>
                                                      [FieldOffset(0)] public MiddleStruct MiddleStruct;
                                                      /// <inheritdoc cref="MiddleStruct.MiddleStruct_Field4" />
                                                      /// <remarks>Field inherited from parent class <see cref="MiddleStruct">MiddleStruct</see>.</remarks>
                                                      [FieldOffset(4)] public int MiddleStruct_Field4;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("MiddleStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("MiddleStruct.Inheritance.InteropGenerator.g.cs", middleStructInheritanceCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task FieldMultipleInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(0)] public int BaseStruct_Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct2
                            {
                                [FieldOffset(0)] public int BaseStruct2_Field0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            [Inherits<BaseStruct2>]
                            public partial struct ChildStruct
                            {
                                [FieldOffset(8)] public int Field8;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [FieldOffset(0)] public int BaseStruct_Field0;
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct2">BaseStruct2</see></summary>
                                                      [FieldOffset(4)] public BaseStruct2 BaseStruct2;
                                                      /// <inheritdoc cref="BaseStruct2.BaseStruct2_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct2">BaseStruct2</see>.</remarks>
                                                      [FieldOffset(4)] public int BaseStruct2_Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("BaseStruct2"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task MemberFunctionInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [MemberFunction("AA BB CC DD ?? ?? ?? ?? AA BB ?? DD")]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public static class Addresses
                                                   {
                                                       public static readonly Address TestFunction = new Address("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD ?? ?? ?? ??", 0, new ulong[] {0x00000000DDCCBBAA, 0x00000000DD00BBAA}, new ulong[] {0x00000000FFFFFFFF, 0x00000000FF00FFFF}, 0);
                                                   }
                                                   public unsafe static class MemberFunctionPointers
                                                   {
                                                       public static delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int> TestFunction => (delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int>) BaseStruct.Addresses.TestFunction.Value;
                                                   }
                                                   public partial int TestFunction(int argOne, void* argTwo)
                                                   {
                                                       if (MemberFunctionPointers.TestFunction is null)
                                                       {
                                                           InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD");
                                                       }
                                                       return MemberFunctionPointers.TestFunction((BaseStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                                   }
                                               }
                                               """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => BaseStruct.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode),
            SourceGeneration.GetInitializerSource(string.Empty, "BaseStruct", ["TestFunction"]));
    }

    [Fact]
    public async Task MemberFunctionChainedInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [MemberFunction("AA BB CC DD ?? ?? ?? ?? AA BB ?? DD")]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop(true)]
                            [Inherits<BaseStruct>]
                            public partial struct MiddleStruct
                            {
                            }

                            [StructLayout(LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<MiddleStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public static class Addresses
                                                   {
                                                       public static readonly Address TestFunction = new Address("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD ?? ?? ?? ??", 0, new ulong[] {0x00000000DDCCBBAA, 0x00000000DD00BBAA}, new ulong[] {0x00000000FFFFFFFF, 0x00000000FF00FFFF}, 0);
                                                   }
                                                   public unsafe static class MemberFunctionPointers
                                                   {
                                                       public static delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int> TestFunction => (delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int>) BaseStruct.Addresses.TestFunction.Value;
                                                   }
                                                   public partial int TestFunction(int argOne, void* argTwo)
                                                   {
                                                       if (MemberFunctionPointers.TestFunction is null)
                                                       {
                                                           InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD");
                                                       }
                                                       return MemberFunctionPointers.TestFunction((BaseStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                                   }
                                               }
                                               """;

        const string middleStructInheritanceCode = """
                                                   // <auto-generated/>
                                                   unsafe partial struct MiddleStruct
                                                   {
                                                       /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                       [FieldOffset(0)] public BaseStruct BaseStruct;
                                                       /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                       /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                       [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                       public int TestFunction(int argOne, void* argTwo) => BaseStruct.TestFunction(argOne, argTwo);
                                                   }
                                                   """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="MiddleStruct">MiddleStruct</see></summary>
                                                      [FieldOffset(0)] public MiddleStruct MiddleStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => MiddleStruct.BaseStruct.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            SourceGeneration.GetEmptyGenerationSource("MiddleStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("MiddleStruct.Inheritance.InteropGenerator.g.cs", middleStructInheritanceCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode),
            SourceGeneration.GetInitializerSource(string.Empty, "BaseStruct", ["TestFunction"]));
    }

    [Fact]
    public async Task VirtualFunctionInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [VirtualFunction(5)]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [StructLayout(LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public unsafe partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   [StructLayout(LayoutKind.Explicit)]
                                                   public unsafe partial struct BaseStructVirtualTable
                                                   {
                                                       [FieldOffset(40)] public delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int> TestFunction;
                                                   }
                                                   [FieldOffset(0)] public BaseStructVirtualTable* VirtualTable;
                                                   [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                   public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                               }
                                               """;

        const string childStructInheritanceGeneratedCode = """
                                                           // <auto-generated/>
                                                           unsafe partial struct ChildStruct
                                                           {
                                                               /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                               [FieldOffset(0)] public BaseStruct BaseStruct;
                                                               [StructLayout(LayoutKind.Explicit)]
                                                               public unsafe partial struct ChildStructVirtualTable
                                                               {
                                                                   [FieldOffset(40)] public delegate* unmanaged[Stdcall] <ChildStruct*, int, void*, int> TestFunction;
                                                               }
                                                               [FieldOffset(0)] public ChildStructVirtualTable* VirtualTable;
                                                               /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                               /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                               [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                               public int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((ChildStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                                           }
                                                           """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceGeneratedCode));
    }

    [Fact]
    public async Task VirtualFunctionInheritanceExistingVirtualTable() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [VirtualFunction(5)]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [StructLayout(LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public unsafe partial struct ChildStruct
                            {
                                [VirtualFunction(6)]
                                public partial int TestFunction2();
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   [StructLayout(LayoutKind.Explicit)]
                                                   public unsafe partial struct BaseStructVirtualTable
                                                   {
                                                       [FieldOffset(40)] public delegate* unmanaged[Stdcall] <BaseStruct*, int, void*, int> TestFunction;
                                                   }
                                                   [FieldOffset(0)] public BaseStructVirtualTable* VirtualTable;
                                                   [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                   public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                               }
                                               """;

        const string childStructGeneratedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    [StructLayout(LayoutKind.Explicit)]
                                                    public unsafe partial struct ChildStructVirtualTable
                                                    {
                                                        [FieldOffset(48)] public delegate* unmanaged[Stdcall] <ChildStruct*, int> TestFunction2;
                                                    }
                                                    [FieldOffset(0)] public ChildStructVirtualTable* VirtualTable;
                                                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                    public partial int TestFunction2() => VirtualTable->TestFunction2((ChildStruct*)Unsafe.AsPointer(ref this));
                                                }
                                                """;

        const string childStructInheritanceGeneratedCode = """
                                                           // <auto-generated/>
                                                           unsafe partial struct ChildStruct
                                                           {
                                                               /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                               [FieldOffset(0)] public BaseStruct BaseStruct;
                                                               public unsafe partial struct ChildStructVirtualTable
                                                               {
                                                                   [FieldOffset(40)] public delegate* unmanaged[Stdcall] <ChildStruct*, int, void*, int> TestFunction;
                                                               }
                                                               /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                               /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                               [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                               public int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((ChildStruct*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                                           }
                                                           """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.InteropGenerator.g.cs", childStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceGeneratedCode));
    }

    [Fact]
    public async Task VirtualFunctionInheritanceNotMainParent() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                            }

                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct2
                            {
                                [VirtualFunction(5)] public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [StructLayout(LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            [Inherits<BaseStruct2>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStruct2Code = """
                                       // <auto-generated/>
                                       unsafe partial struct BaseStruct2
                                       {
                                           [StructLayout(LayoutKind.Explicit)]
                                           public unsafe partial struct BaseStruct2VirtualTable
                                           {
                                               [FieldOffset(40)] public delegate* unmanaged[Stdcall] <BaseStruct2*, int, void*, int> TestFunction;
                                           }
                                           [FieldOffset(0)] public BaseStruct2VirtualTable* VirtualTable;
                                           [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                           public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct2*)Unsafe.AsPointer(ref this), argOne, argTwo);
                                       }
                                       """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct2">BaseStruct2</see></summary>
                                                      [FieldOffset(4)] public BaseStruct2 BaseStruct2;
                                                      /// <inheritdoc cref="BaseStruct2.TestFunction" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct2">BaseStruct2</see>.</remarks>
                                                      [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => BaseStruct2.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            ("BaseStruct2.InteropGenerator.g.cs", baseStruct2Code),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }
    
        [Fact]
    public async Task PublicMethodInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                public int TestFunction() => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [FieldOffset(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction() => BaseStruct.TestFunction();
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            SourceGeneration.GetEmptyGenerationSource("BaseStruct"),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }
    
    [Fact]
    public async Task StringOverloadsInheritance() {
        const string code = """
                            [StructLayout(LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [GenerateStringOverloads]
                                public int TestFunction(int argOne, byte* stringArg) { return 0; }
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                                      // <auto-generated/>
                                      unsafe partial struct BaseStruct
                                      {
                                          public int TestFunction(int argOne, string stringArg)
                                          {
                                              int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                              Span<byte> stringArgBytes = stringArgUTF8StrLen <= 512 ? stackalloc byte[stringArgUTF8StrLen + 1] : new byte[stringArgUTF8StrLen + 1];
                                              global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                              stringArgBytes[stringArgUTF8StrLen] = 0;
                                              fixed (byte* stringArgPtr = stringArgBytes)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                          public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                          {
                                              fixed (byte* stringArgPtr = stringArg)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                      }
                                      """;

        const string childStructGeneratedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [FieldOffset(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TestFunction" />
                                                    /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                                                    public int TestFunction(int argOne, byte* stringArg) => BaseStruct.TestFunction(argOne, stringArg);
                                                    public int TestFunction(int argOne, string stringArg)
                                                    {
                                                        int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                                        Span<byte> stringArgBytes = stringArgUTF8StrLen <= 512 ? stackalloc byte[stringArgUTF8StrLen + 1] : new byte[stringArgUTF8StrLen + 1];
                                                        global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                                        stringArgBytes[stringArgUTF8StrLen] = 0;
                                                        fixed (byte* stringArgPtr = stringArgBytes)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                    public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                                    {
                                                        fixed (byte* stringArgPtr = stringArg)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructGeneratedCode));
    }
    
    [Fact]
    public async Task FixedArrayInheritance() {
        const string code = """
                            using InteropGeneratorTesting;

                            [StructLayout(LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [FieldOffset(0)] [FixedSizeArray] internal FixedSizeArray10<int> _tenIntArray;
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                              // <auto-generated/>
                              unsafe partial struct BaseStruct
                              {
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [UnscopedRef] public Span<int> TenIntArray => _tenIntArray;
                              }
                              """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [FieldOffset(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [UnscopedRef] public Span<int> TenIntArray => BaseStruct._tenIntArray;
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            SourceGeneration.GetEmptyGenerationSource("ChildStruct"),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }
}
