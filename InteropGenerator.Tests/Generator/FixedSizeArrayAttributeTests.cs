using InteropGenerator.Tests.Helpers;
using Xunit;
using VerifyIG = InteropGenerator.Tests.Helpers.IncrementalGeneratorVerifier<InteropGenerator.Generator.InteropGenerator>;

namespace InteropGenerator.Tests.Generator;

public class FixedSizeArrayAttributeTests {
    [Fact]
    public async Task GenerateFixedArray() {
        const string code = """
                            using InteropGenerator.Runtime.Generated;
                            
                            [GenerateInterop]
                            public partial struct TestStruct
                            {
                                [FixedSizeArray]
                                private FixedSizeArray10<int> _tenIntArray;
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct
                              {
                                  public Span<int> TenIntArray => _tenIntArray;
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InteropGenerator.g.cs", result),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }
    
    [Fact]
    public async Task GenerateSameFixedArray() {
        const string code = """
                            using InteropGenerator.Runtime.Generated;

                            [GenerateInterop]
                            public partial struct TestStruct
                            {
                                [FixedSizeArray]
                                private FixedSizeArray10<int> _tenIntArray;
                                
                                [FixedSizeArray]
                                private FixedSizeArray10<uint> _tenUIntArray;
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct
                              {
                                  public Span<int> TenIntArray => _tenIntArray;
                                  public Span<uint> TenUIntArray => _tenUIntArray;
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InteropGenerator.g.cs", result),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }
    
    [Fact]
    public async Task GenerateDifferentFixedArrays() {
        const string code = """
                            using InteropGenerator.Runtime.Generated;

                            [GenerateInterop]
                            public partial struct TestStruct
                            {
                                [FixedSizeArray]
                                private FixedSizeArray10<int> _tenIntArray;
                                
                                [FixedSizeArray]
                                private FixedSizeArray57<uint> _fiftySevenUIntArray;
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct
                              {
                                  public Span<int> TenIntArray => _tenIntArray;
                                  public Span<uint> FiftySevenUIntArray => _fiftySevenUIntArray;
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InteropGenerator.g.cs", result),
            SourceGeneration.GetFixedSizeArraySource([10, 57]));
    }
}
