// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x48)]
public unsafe partial struct ContentRoulette {
    [FieldOffset(0x00)] public int Name_Offset;
    [FieldOffset(0x04)] public int Category_Offset;
    [FieldOffset(0x08)] public int Unknown0_Offset;
    [FieldOffset(0x0C)] public int Description_Offset;
    [FieldOffset(0x10)] public int DutyType_Offset;
    [FieldOffset(0x14)] public uint Unknown1;
    [FieldOffset(0x18)] public uint Icon;
    [FieldOffset(0x1C)] public uint Unknown2;
    [FieldOffset(0x20)] public uint Unknown3;
    [FieldOffset(0x24)] public ushort ItemLevelRequired;
    [FieldOffset(0x26)] public ushort Unknown4;
    [FieldOffset(0x28)] public ushort RewardTomeA;
    [FieldOffset(0x2A)] public ushort RewardTomeB;
    [FieldOffset(0x2C)] public ushort RewardTomeC;
    [FieldOffset(0x2E)] public ushort Unknown5;
    /// <remarks>InstanceContent</remarks>
    [FieldOffset(0x30)] public ushort InstanceContent;
    [FieldOffset(0x32)] public byte Unknown6;
    /// <remarks>ContentRouletteOpenRule</remarks>
    [FieldOffset(0x33)] public byte OpenRule;
    [FieldOffset(0x34)] public byte RequiredLevel;
    [FieldOffset(0x35)] public byte Unknown7;
    /// <remarks>ContentRouletteRoleBonus</remarks>
    [FieldOffset(0x36)] public byte ContentRouletteRoleBonus;
    [FieldOffset(0x37)] public byte SortKey;
    [FieldOffset(0x38)] public byte Unknown8;
    /// <remarks>ContentMemberType</remarks>
    [FieldOffset(0x39)] public byte ContentMemberType;
    [FieldOffset(0x3A)] public byte Unknown9;
    [FieldOffset(0x3B)] public byte Unknown10;
    [FieldOffset(0x3C)] public byte Unknown11;
    [FieldOffset(0x3D)] public byte Unknown12;
    [FieldOffset(0x3E)] public byte Unknown13;
    [FieldOffset(0x3F)] public byte Unknown14;
    [FieldOffset(0x40)] public byte ContentRouletteOpenRule;
    [FieldOffset(0x41)] public byte Unknown15;
    [FieldOffset(0x42)] public byte Unknown16;
    [FieldOffset(0x43)] public sbyte Unknown17;
    [FieldOffset(0x44)] public BitField44Flags BitField44;
    public bool IsGoldSaucer => BitField44.HasFlag(BitField44Flags.IsGoldSaucer);
    public bool IsInDutyFinder => BitField44.HasFlag(BitField44Flags.IsInDutyFinder);
    public bool IsPvP => BitField44.HasFlag(BitField44Flags.IsPvP);
    public bool Unknown25 => BitField44.HasFlag(BitField44Flags.Unknown25);
    public bool Unknown18 => BitField44.HasFlag(BitField44Flags.Unknown18);
    public bool Unknown19 => BitField44.HasFlag(BitField44Flags.Unknown19);
    public bool Unknown20 => BitField44.HasFlag(BitField44Flags.Unknown20);
    public bool RequireAllDuties => BitField44.HasFlag(BitField44Flags.RequireAllDuties);
    [FieldOffset(0x45)] public BitField45Flags BitField45;
    public bool Unknown21 => BitField45.HasFlag(BitField45Flags.Unknown21);
    public bool Unknown22 => BitField45.HasFlag(BitField45Flags.Unknown22);
    public bool Unknown23 => BitField45.HasFlag(BitField45Flags.Unknown23);
    public bool Unknown24 => BitField45.HasFlag(BitField45Flags.Unknown24);

    [Flags]
    public enum BitField44Flags : byte {
    	IsGoldSaucer = 1 << 0,
    	IsInDutyFinder = 1 << 1,
    	IsPvP = 1 << 2,
    	Unknown25 = 1 << 3,
    	Unknown18 = 1 << 4,
    	Unknown19 = 1 << 5,
    	Unknown20 = 1 << 6,
    	RequireAllDuties = 1 << 7,
    }
    [Flags]
    public enum BitField45Flags : byte {
    	Unknown21 = 1 << 0,
    	Unknown22 = 1 << 1,
    	Unknown23 = 1 << 2,
    	Unknown24 = 1 << 3,
    }
}
