// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x88)]
public unsafe partial struct Fate {
    [FieldOffset(0x00)] public int Name_Offset;
    [FieldOffset(0x04)] public int Description_Offset;
    [FieldOffset(0x08)] public int Objective_Offset;
    [FieldOffset(0x0C), FixedSizeArray] internal FixedSizeArray3<int> _statusText;
    [FieldOffset(0x18)] public uint Unknown0;
    [FieldOffset(0x1C)] public uint Unknown1;
    /// <remarks>EventItem</remarks>
    [FieldOffset(0x20)] public uint ReqEventItem;
    /// <remarks>EventItem</remarks>
    [FieldOffset(0x24)] public uint TurnInEventItem;
    [FieldOffset(0x28), FixedSizeArray] internal FixedSizeArray3<uint> _unknown2;
    [FieldOffset(0x34), FixedSizeArray] internal FixedSizeArray8<ushort> _objectiveIcon;
    [FieldOffset(0x44)] public uint Location;
    /// <remarks>EventItem</remarks>
    [FieldOffset(0x48)] public uint EventItem;
    [FieldOffset(0x4C)] public uint Icon;
    [FieldOffset(0x50)] public uint MapIcon;
    [FieldOffset(0x54)] public uint InactiveMapIcon;
    [FieldOffset(0x58)] public uint LGBGuardNPCLocation;
    /// <remarks>Quest</remarks>
    [FieldOffset(0x5C)] public uint RequiredQuest;
    [FieldOffset(0x60)] public uint FATEChain;
    /// <remarks>ArrayEventHandler</remarks>
    [FieldOffset(0x64)] public uint ArrayIndex;
    [FieldOffset(0x68)] public uint Unknown3;
    /// <remarks>BGM</remarks>
    [FieldOffset(0x6C)] public int Music;
    /// <remarks>FateRuleEx</remarks>
    [FieldOffset(0x70)] public ushort FateRuleEx;
    /// <remarks>ScreenImage</remarks>
    [FieldOffset(0x72)] public ushort ScreenImageAccept;
    /// <remarks>ScreenImage</remarks>
    [FieldOffset(0x74)] public ushort ScreenImageComplete;
    /// <remarks>ScreenImage</remarks>
    [FieldOffset(0x76)] public ushort ScreenImageFailed;
    /// <remarks>Status</remarks>
    [FieldOffset(0x78)] public ushort GivenStatus;
    [FieldOffset(0x7A)] public ushort Unknown4;
    [FieldOffset(0x7C)] public ushort Unknown5;
    [FieldOffset(0x7E)] public byte EurekaFate;
    [FieldOffset(0x7F)] public byte Rule;
    [FieldOffset(0x80)] public byte ClassJobLevel;
    [FieldOffset(0x81)] public byte ClassJobLevelMax;
    [FieldOffset(0x82), FixedSizeArray] internal FixedSizeArray3<byte> _statusValue;
    [FieldOffset(0x85)] public byte Unknown6;
    [FieldOffset(0x86)] public byte Unknown7;
    [FieldOffset(0x87)] public BitField87Flags BitField87;
    public bool SpecialFate => BitField87.HasFlag(BitField87Flags.SpecialFate);
    public bool Unknown8 => BitField87.HasFlag(BitField87Flags.Unknown8);
    public bool AdventEvent => BitField87.HasFlag(BitField87Flags.AdventEvent);
    public bool MoonFaireEvent => BitField87.HasFlag(BitField87Flags.MoonFaireEvent);
    public bool Unknown9 => BitField87.HasFlag(BitField87Flags.Unknown9);

    [Flags]
    public enum BitField87Flags : byte {
    	SpecialFate = 1 << 0,
    	Unknown8 = 1 << 1,
    	AdventEvent = 1 << 2,
    	MoonFaireEvent = 1 << 3,
    	Unknown9 = 1 << 4,
    }
}
