// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x104)]
public unsafe partial struct ENpcBase {
    [FieldOffset(0x00), FixedSizeArray] internal FixedSizeArray32<uint> _eNpcData;
    [FieldOffset(0x80)] public ulong ModelMainHand;
    [FieldOffset(0x88)] public ulong ModelOffHand;
    [FieldOffset(0x90)] public float Scale;
    [FieldOffset(0x94)] public uint ModelHead;
    [FieldOffset(0x98)] public uint ModelBody;
    [FieldOffset(0x9C)] public uint ModelHands;
    [FieldOffset(0xA0)] public uint ModelLegs;
    [FieldOffset(0xA4)] public uint ModelFeet;
    [FieldOffset(0xA8)] public uint ModelEars;
    [FieldOffset(0xAC)] public uint ModelNeck;
    [FieldOffset(0xB0)] public uint ModelWrists;
    [FieldOffset(0xB4)] public uint ModelLeftRing;
    [FieldOffset(0xB8)] public uint ModelRightRing;
    [FieldOffset(0xBC)] public ushort EventHandler;
    /// <remarks>ModelChara</remarks>
    [FieldOffset(0xBE)] public ushort ModelChara;
    /// <remarks>NpcEquip</remarks>
    [FieldOffset(0xC0)] public ushort NpcEquip;
    /// <remarks>Behavior</remarks>
    [FieldOffset(0xC2)] public ushort Behavior;
    [FieldOffset(0xC4)] public ushort Unknown_70_1;
    [FieldOffset(0xC6)] public ushort Unknown_70_2;
    /// <remarks>Balloon</remarks>
    [FieldOffset(0xC8)] public ushort Balloon;
    /// <remarks>Race</remarks>
    [FieldOffset(0xCA)] public byte Race;
    [FieldOffset(0xCB)] public byte Gender;
    [FieldOffset(0xCC)] public byte BodyType;
    [FieldOffset(0xCD)] public byte Height;
    /// <remarks>Tribe</remarks>
    [FieldOffset(0xCE)] public byte Tribe;
    [FieldOffset(0xCF)] public byte Face;
    [FieldOffset(0xD0)] public byte HairStyle;
    [FieldOffset(0xD1)] public byte HairHighlight;
    [FieldOffset(0xD2)] public byte SkinColor;
    [FieldOffset(0xD3)] public byte EyeHeterochromia;
    [FieldOffset(0xD4)] public byte HairColor;
    [FieldOffset(0xD5)] public byte HairHighlightColor;
    [FieldOffset(0xD6)] public byte FacialFeature;
    [FieldOffset(0xD7)] public byte FacialFeatureColor;
    [FieldOffset(0xD8)] public byte Eyebrows;
    [FieldOffset(0xD9)] public byte EyeColor;
    [FieldOffset(0xDA)] public byte EyeShape;
    [FieldOffset(0xDB)] public byte Nose;
    [FieldOffset(0xDC)] public byte Jaw;
    [FieldOffset(0xDD)] public byte Mouth;
    [FieldOffset(0xDE)] public byte LipColor;
    [FieldOffset(0xDF)] public byte BustOrTone1;
    [FieldOffset(0xE0)] public byte ExtraFeature1;
    [FieldOffset(0xE1)] public byte ExtraFeature2OrBust;
    [FieldOffset(0xE2)] public byte FacePaint;
    [FieldOffset(0xE3)] public byte FacePaintColor;
    [FieldOffset(0xE4)] public byte Unknown0;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xE5)] public byte DyeMainHand;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xE6)] public byte Dye2MainHand;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xE7)] public byte DyeOffHand;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xE8)] public byte Dye2OffHand;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xE9)] public byte DyeHead;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xEA)] public byte DyeBody;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xEB)] public byte DyeHands;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xEC)] public byte DyeLegs;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xED)] public byte DyeFeet;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xEE)] public byte DyeEars;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xEF)] public byte DyeNeck;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF0)] public byte DyeWrists;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF1)] public byte DyeLeftRing;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF2)] public byte DyeRightRing;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF3)] public byte Dye2Head;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF4)] public byte Dye2Body;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF5)] public byte Dye2Hands;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF6)] public byte Dye2Legs;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF7)] public byte Dye2Feet;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF8)] public byte Dye2Ears;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xF9)] public byte Dye2Neck;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xFA)] public byte Dye2Wrists;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xFB)] public byte Dye2LeftRing;
    /// <remarks>Stain</remarks>
    [FieldOffset(0xFC)] public byte Dye2RightRing;
    [FieldOffset(0xFD)] public byte Invisibility;
    [FieldOffset(0xFE)] public byte DefaultBalloon;
    [FieldOffset(0xFF)] public byte Unknown1;
    [FieldOffset(0x100)] public BitField100Flags BitField100;
    public bool Important => BitField100.HasFlag(BitField100Flags.Important);
    public bool Visor => BitField100.HasFlag(BitField100Flags.Visor);
    public bool NotRewriteHeight => BitField100.HasFlag(BitField100Flags.NotRewriteHeight);

    [Flags]
    public enum BitField100Flags : byte {
    	Important = 1 << 0,
    	Visor = 1 << 1,
    	NotRewriteHeight = 1 << 2,
    }
}
