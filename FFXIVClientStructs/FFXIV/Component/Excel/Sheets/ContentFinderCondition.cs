// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x7C)]
public unsafe partial struct ContentFinderCondition {
    [FieldOffset(0x00)] public int Name_Offset;
    [FieldOffset(0x04)] public int NameShort_Offset;
    [FieldOffset(0x08)] public bool LevelingRoulette;
    [FieldOffset(0x09)] public bool HighLevelRoulette;
    [FieldOffset(0x0A)] public bool MSQRoulette;
    [FieldOffset(0x0B)] public bool GuildHestRoulette;
    [FieldOffset(0x0C)] public bool ExpertRoulette;
    [FieldOffset(0x0D)] public bool TrialRoulette;
    [FieldOffset(0x0E)] public bool DailyFrontlineChallenge;
    [FieldOffset(0x0F)] public bool LevelCapRoulette;
    [FieldOffset(0x10)] public bool MentorRoulette;
    [FieldOffset(0x11)] public bool Unknown0;
    [FieldOffset(0x12)] public bool Unknown1;
    [FieldOffset(0x13)] public bool Unknown2;
    [FieldOffset(0x14)] public bool Unknown3;
    [FieldOffset(0x15)] public bool Unknown4;
    [FieldOffset(0x16)] public bool AllianceRoulette;
    [FieldOffset(0x17)] public bool FeastTeamRoulette;
    [FieldOffset(0x18)] public bool NormalRaidRoulette;
    [FieldOffset(0x19)] public bool Unknown5;
    [FieldOffset(0x1A)] public bool Unknown6;
    [FieldOffset(0x1B)] public bool Unknown7;
    [FieldOffset(0x1C)] public bool Unknown8;
    [FieldOffset(0x1D)] public bool Unknown9;
    [FieldOffset(0x1E)] public bool Unknown10;
    [FieldOffset(0x1F)] public bool Unknown11;
    [FieldOffset(0x20)] public bool Unknown12;
    [FieldOffset(0x21)] public bool Unknown13;
    [FieldOffset(0x22)] public bool Unknown14;
    [FieldOffset(0x23)] public bool Unknown15;
    [FieldOffset(0x24)] public bool Unknown16;
    [FieldOffset(0x25)] public bool Unknown17;
    [FieldOffset(0x26)] public bool Unknown18;
    [FieldOffset(0x27)] public bool Unknown19;
    [FieldOffset(0x28)] public bool Unknown20;
    [FieldOffset(0x29)] public bool Unknown21;
    [FieldOffset(0x2A)] public bool Unknown22;
    [FieldOffset(0x2B)] public bool Unknown23;
    [FieldOffset(0x2C)] public bool Unknown24;
    [FieldOffset(0x2D)] public bool Unknown25;
    [FieldOffset(0x2E)] public bool Unknown26;
    [FieldOffset(0x2F)] public bool Unknown27;
    [FieldOffset(0x30)] public bool Unknown28;
    [FieldOffset(0x34)] public int ShortCode_Offset;
    [FieldOffset(0x38)] public uint Unknown29;
    [FieldOffset(0x3C)] public uint Unknown30;
    /// <remarks>Quest</remarks>
    [FieldOffset(0x40)] public uint UnlockQuest;
    [FieldOffset(0x44)] public uint Unknown31;
    [FieldOffset(0x48)] public uint Unknown_70_1;
    [FieldOffset(0x4C)] public uint Transient;
    [FieldOffset(0x50)] public uint Image;
    [FieldOffset(0x54)] public uint Icon;
    [FieldOffset(0x58)] public int Unknown32;
    /// <remarks>TerritoryType</remarks>
    [FieldOffset(0x5C)] public ushort TerritoryType;
    [FieldOffset(0x5E)] public ushort Content;
    [FieldOffset(0x60)] public ushort ItemLevelRequired;
    [FieldOffset(0x62)] public ushort ItemLevelSync;
    [FieldOffset(0x64)] public ushort SortKey;
    [FieldOffset(0x66)] public byte ContentLinkType;
    [FieldOffset(0x67)] public byte Unknown33;
    /// <remarks>ClassJobCategory</remarks>
    [FieldOffset(0x68)] public byte AcceptClassJobCategory;
    /// <remarks>ContentMemberType</remarks>
    [FieldOffset(0x69)] public byte ContentMemberType;
    [FieldOffset(0x6A)] public byte Unknown34;
    [FieldOffset(0x6B)] public byte Unknown35;
    [FieldOffset(0x6C)] public byte Unknown36;
    [FieldOffset(0x6D)] public byte Unknown37;
    [FieldOffset(0x6E)] public byte ClassJobLevelRequired;
    [FieldOffset(0x6F)] public byte ClassJobLevelSync;
    [FieldOffset(0x70)] public byte Unknown38;
    [FieldOffset(0x71)] public byte Unknown39;
    /// <remarks>ContentType</remarks>
    [FieldOffset(0x72)] public byte ContentType;
    [FieldOffset(0x73)] public byte TransientKey;
    [FieldOffset(0x74)] public byte Unknown40;
    [FieldOffset(0x75)] public sbyte Unknown41;
    [FieldOffset(0x76)] public BitField76Flags BitField76;
    public bool PvP => BitField76.HasFlag(BitField76Flags.PvP);
    public bool Unknown_70_2 => BitField76.HasFlag(BitField76Flags.Unknown_70_2);
    public bool Unknown42 => BitField76.HasFlag(BitField76Flags.Unknown42);
    public bool AllowUndersized => BitField76.HasFlag(BitField76Flags.AllowUndersized);
    public bool Unknown43 => BitField76.HasFlag(BitField76Flags.Unknown43);
    public bool AllowReplacement => BitField76.HasFlag(BitField76Flags.AllowReplacement);
    public bool Unknown44 => BitField76.HasFlag(BitField76Flags.Unknown44);
    public bool AllowExplorerMode => BitField76.HasFlag(BitField76Flags.AllowExplorerMode);
    [FieldOffset(0x77)] public BitField77Flags BitField77;
    public bool Unknown45 => BitField77.HasFlag(BitField77Flags.Unknown45);
    public bool Unknown46 => BitField77.HasFlag(BitField77Flags.Unknown46);
    public bool Unknown47 => BitField77.HasFlag(BitField77Flags.Unknown47);
    public bool Unknown48 => BitField77.HasFlag(BitField77Flags.Unknown48);
    public bool HighEndDuty => BitField77.HasFlag(BitField77Flags.HighEndDuty);
    public bool Unknown49 => BitField77.HasFlag(BitField77Flags.Unknown49);
    public bool Unknown50 => BitField77.HasFlag(BitField77Flags.Unknown50);
    public bool Unknown51 => BitField77.HasFlag(BitField77Flags.Unknown51);
    [FieldOffset(0x78)] public BitField78Flags BitField78;
    public bool DutyRecorderAllowed => BitField78.HasFlag(BitField78Flags.DutyRecorderAllowed);
    public bool Unknown52 => BitField78.HasFlag(BitField78Flags.Unknown52);
    public bool Unknown53 => BitField78.HasFlag(BitField78Flags.Unknown53);
    public bool Unknown54 => BitField78.HasFlag(BitField78Flags.Unknown54);
    public bool Unknown55 => BitField78.HasFlag(BitField78Flags.Unknown55);
    public bool Unknown56 => BitField78.HasFlag(BitField78Flags.Unknown56);

    [Flags]
    public enum BitField76Flags : byte {
    	PvP = 1 << 0,
    	Unknown_70_2 = 1 << 1,
    	Unknown42 = 1 << 2,
    	AllowUndersized = 1 << 3,
    	Unknown43 = 1 << 4,
    	AllowReplacement = 1 << 5,
    	Unknown44 = 1 << 6,
    	AllowExplorerMode = 1 << 7,
    }
    [Flags]
    public enum BitField77Flags : byte {
    	Unknown45 = 1 << 0,
    	Unknown46 = 1 << 1,
    	Unknown47 = 1 << 2,
    	Unknown48 = 1 << 3,
    	HighEndDuty = 1 << 4,
    	Unknown49 = 1 << 5,
    	Unknown50 = 1 << 6,
    	Unknown51 = 1 << 7,
    }
    [Flags]
    public enum BitField78Flags : byte {
    	DutyRecorderAllowed = 1 << 0,
    	Unknown52 = 1 << 1,
    	Unknown53 = 1 << 2,
    	Unknown54 = 1 << 3,
    	Unknown55 = 1 << 4,
    	Unknown56 = 1 << 5,
    }
}
