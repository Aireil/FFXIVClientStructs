// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x0C)]
public unsafe partial struct TerritoryIntendedUse {
    [FieldOffset(0x00)] public ushort Unknown0;
    [FieldOffset(0x02)] public byte Unknown1;
    [FieldOffset(0x03)] public byte Unknown2;
    [FieldOffset(0x04)] public byte Unknown3;
    [FieldOffset(0x05)] public BitField05Flags BitField05;
    public bool Unknown4 => BitField05.HasFlag(BitField05Flags.Unknown4);
    public bool Unknown5 => BitField05.HasFlag(BitField05Flags.Unknown5);
    public bool Unknown6 => BitField05.HasFlag(BitField05Flags.Unknown6);
    public bool Unknown7 => BitField05.HasFlag(BitField05Flags.Unknown7);
    public bool Unknown8 => BitField05.HasFlag(BitField05Flags.Unknown8);
    public bool Unknown9 => BitField05.HasFlag(BitField05Flags.Unknown9);
    public bool Unknown10 => BitField05.HasFlag(BitField05Flags.Unknown10);
    public bool Unknown11 => BitField05.HasFlag(BitField05Flags.Unknown11);
    [FieldOffset(0x06)] public BitField06Flags BitField06;
    public bool Unknown12 => BitField06.HasFlag(BitField06Flags.Unknown12);
    public bool Unknown13 => BitField06.HasFlag(BitField06Flags.Unknown13);
    public bool Unknown14 => BitField06.HasFlag(BitField06Flags.Unknown14);
    public bool Unknown15 => BitField06.HasFlag(BitField06Flags.Unknown15);
    public bool Unknown16 => BitField06.HasFlag(BitField06Flags.Unknown16);
    public bool Unknown17 => BitField06.HasFlag(BitField06Flags.Unknown17);
    public bool Unknown18 => BitField06.HasFlag(BitField06Flags.Unknown18);
    public bool Unknown19 => BitField06.HasFlag(BitField06Flags.Unknown19);
    [FieldOffset(0x07)] public BitField07Flags BitField07;
    public bool Unknown20 => BitField07.HasFlag(BitField07Flags.Unknown20);
    public bool Unknown21 => BitField07.HasFlag(BitField07Flags.Unknown21);
    public bool Unknown22 => BitField07.HasFlag(BitField07Flags.Unknown22);
    public bool Unknown23 => BitField07.HasFlag(BitField07Flags.Unknown23);
    public bool Unknown24 => BitField07.HasFlag(BitField07Flags.Unknown24);
    public bool Unknown25 => BitField07.HasFlag(BitField07Flags.Unknown25);
    public bool Unknown26 => BitField07.HasFlag(BitField07Flags.Unknown26);
    public bool Unknown27 => BitField07.HasFlag(BitField07Flags.Unknown27);
    [FieldOffset(0x08)] public BitField08Flags BitField08;
    public bool Unknown28 => BitField08.HasFlag(BitField08Flags.Unknown28);
    public bool Unknown29 => BitField08.HasFlag(BitField08Flags.Unknown29);
    public bool Unknown30 => BitField08.HasFlag(BitField08Flags.Unknown30);
    public bool Unknown31 => BitField08.HasFlag(BitField08Flags.Unknown31);
    public bool Unknown32 => BitField08.HasFlag(BitField08Flags.Unknown32);
    public bool Unknown33 => BitField08.HasFlag(BitField08Flags.Unknown33);
    public bool Unknown34 => BitField08.HasFlag(BitField08Flags.Unknown34);
    public bool Unknown35 => BitField08.HasFlag(BitField08Flags.Unknown35);
    [FieldOffset(0x09)] public BitField09Flags BitField09;
    public bool Unknown36 => BitField09.HasFlag(BitField09Flags.Unknown36);
    public bool Unknown37 => BitField09.HasFlag(BitField09Flags.Unknown37);
    public bool Unknown38 => BitField09.HasFlag(BitField09Flags.Unknown38);
    public bool Unknown39 => BitField09.HasFlag(BitField09Flags.Unknown39);
    public bool Unknown40 => BitField09.HasFlag(BitField09Flags.Unknown40);

    [Flags]
    public enum BitField05Flags : byte {
    	Unknown4 = 1 << 0,
    	Unknown5 = 1 << 1,
    	Unknown6 = 1 << 2,
    	Unknown7 = 1 << 3,
    	Unknown8 = 1 << 4,
    	Unknown9 = 1 << 5,
    	Unknown10 = 1 << 6,
    	Unknown11 = 1 << 7,
    }
    [Flags]
    public enum BitField06Flags : byte {
    	Unknown12 = 1 << 0,
    	Unknown13 = 1 << 1,
    	Unknown14 = 1 << 2,
    	Unknown15 = 1 << 3,
    	Unknown16 = 1 << 4,
    	Unknown17 = 1 << 5,
    	Unknown18 = 1 << 6,
    	Unknown19 = 1 << 7,
    }
    [Flags]
    public enum BitField07Flags : byte {
    	Unknown20 = 1 << 0,
    	Unknown21 = 1 << 1,
    	Unknown22 = 1 << 2,
    	Unknown23 = 1 << 3,
    	Unknown24 = 1 << 4,
    	Unknown25 = 1 << 5,
    	Unknown26 = 1 << 6,
    	Unknown27 = 1 << 7,
    }
    [Flags]
    public enum BitField08Flags : byte {
    	Unknown28 = 1 << 0,
    	Unknown29 = 1 << 1,
    	Unknown30 = 1 << 2,
    	Unknown31 = 1 << 3,
    	Unknown32 = 1 << 4,
    	Unknown33 = 1 << 5,
    	Unknown34 = 1 << 6,
    	Unknown35 = 1 << 7,
    }
    [Flags]
    public enum BitField09Flags : byte {
    	Unknown36 = 1 << 0,
    	Unknown37 = 1 << 1,
    	Unknown38 = 1 << 2,
    	Unknown39 = 1 << 3,
    	Unknown40 = 1 << 4,
    }
}
