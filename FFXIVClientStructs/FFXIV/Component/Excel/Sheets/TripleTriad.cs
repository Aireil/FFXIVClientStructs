// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x50)]
public unsafe partial struct TripleTriad {
    [FieldOffset(0x00), FixedSizeArray] internal FixedSizeArray4<uint> _itemPossibleReward;
    [FieldOffset(0x10), FixedSizeArray] internal FixedSizeArray3<uint> _previousQuest;
    /// <remarks>DefaultTalk</remarks>
    [FieldOffset(0x1C)] public uint DefaultTalkChallenge;
    /// <remarks>DefaultTalk</remarks>
    [FieldOffset(0x20)] public uint DefaultTalkUnavailable;
    /// <remarks>DefaultTalk</remarks>
    [FieldOffset(0x24)] public uint DefaultTalkNPCWin;
    /// <remarks>DefaultTalk</remarks>
    [FieldOffset(0x28)] public uint DefaultTalkDraw;
    /// <remarks>DefaultTalk</remarks>
    [FieldOffset(0x2C)] public uint DefaultTalkPCWin;
    [FieldOffset(0x30), FixedSizeArray] internal FixedSizeArray5<ushort> _tripleTriadCardFixed;
    [FieldOffset(0x3A), FixedSizeArray] internal FixedSizeArray5<ushort> _tripleTriadCardVariable;
    [FieldOffset(0x44)] public ushort Fee;
    [FieldOffset(0x46)] public ushort StartTime;
    [FieldOffset(0x48)] public ushort EndTime;
    [FieldOffset(0x4A), FixedSizeArray] internal FixedSizeArray2<byte> _tripleTriadRule;
    [FieldOffset(0x4C)] public byte PreviousQuestJoin;
    [FieldOffset(0x4D)] public BitField4DFlags BitField4D;
    public bool UsesRegionalRules => BitField4D.HasFlag(BitField4DFlags.UsesRegionalRules);
    public bool Unknown0 => BitField4D.HasFlag(BitField4DFlags.Unknown0);

    [Flags]
    public enum BitField4DFlags : byte {
    	UsesRegionalRules = 1 << 0,
    	Unknown0 = 1 << 1,
    }
}
