// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x10C)]
public unsafe partial struct CustomTalk {
    [FieldOffset(0x00), FixedSizeArray] internal FixedSizeArray30<ScriptStruct> _script;
    [FieldOffset(0xF0)] public int MainOption_Offset;
    [FieldOffset(0xF4)] public int SubOption_Offset;
    [FieldOffset(0xF8)] public int Name_Offset;
    [FieldOffset(0xFC)] public uint IconActor;
    [FieldOffset(0x100)] public uint IconMap;
    /// <remarks>CollectablesShop, ContentEntry, SpecialShop, CustomTalkNestHandlers</remarks>
    [FieldOffset(0x104)] public uint SpecialLinks;
    [FieldOffset(0x108)] public byte Unknown0;
    [FieldOffset(0x109)] public byte Unknown1;
    [FieldOffset(0x10A)] public BitField10AFlags BitField10A;
    public bool Unknown2 => BitField10A.HasFlag(BitField10AFlags.Unknown2);
    public bool Unknown3 => BitField10A.HasFlag(BitField10AFlags.Unknown3);
    public bool Unknown4 => BitField10A.HasFlag(BitField10AFlags.Unknown4);
    public bool Unknown5 => BitField10A.HasFlag(BitField10AFlags.Unknown5);
    public bool Unknown6 => BitField10A.HasFlag(BitField10AFlags.Unknown6);
    public bool Unknown7 => BitField10A.HasFlag(BitField10AFlags.Unknown7);
    public bool Unknown8 => BitField10A.HasFlag(BitField10AFlags.Unknown8);
    public bool Unknown9 => BitField10A.HasFlag(BitField10AFlags.Unknown9);
    [FieldOffset(0x10B)] public BitField10BFlags BitField10B;
    public bool Unknown10 => BitField10B.HasFlag(BitField10BFlags.Unknown10);
    public bool Unknown11 => BitField10B.HasFlag(BitField10BFlags.Unknown11);
    public bool Unknown12 => BitField10B.HasFlag(BitField10BFlags.Unknown12);

    [StructLayout(LayoutKind.Explicit, Size = 0x08)]
    public partial struct ScriptStruct {
        [FieldOffset(0x00)] public int ScriptInstruction_Offset;
        [FieldOffset(0x04)] public uint ScriptArg;
    }
    [Flags]
    public enum BitField10AFlags : byte {
    	Unknown2 = 1 << 0,
    	Unknown3 = 1 << 1,
    	Unknown4 = 1 << 2,
    	Unknown5 = 1 << 3,
    	Unknown6 = 1 << 4,
    	Unknown7 = 1 << 5,
    	Unknown8 = 1 << 6,
    	Unknown9 = 1 << 7,
    }
    [Flags]
    public enum BitField10BFlags : byte {
    	Unknown10 = 1 << 0,
    	Unknown11 = 1 << 1,
    	Unknown12 = 1 << 2,
    }
}
