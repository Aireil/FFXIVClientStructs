// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x38)]
public unsafe partial struct MiniGameTurnBreakEnemy {
    [FieldOffset(0x00)] public int Unknown0;
    [FieldOffset(0x04)] public byte Unknown1;
    [FieldOffset(0x05)] public byte Unknown2;
    [FieldOffset(0x06)] public BitField06Flags BitField06;
    public bool Unknown3 => BitField06.HasFlag(BitField06Flags.Unknown3);
    public bool Unknown4 => BitField06.HasFlag(BitField06Flags.Unknown4);
    [FieldOffset(0x08)] public int Unknown5;
    [FieldOffset(0x0C)] public byte Unknown6;
    [FieldOffset(0x0D)] public byte Unknown7;
    [FieldOffset(0x0E)] public BitField0EFlags BitField0E;
    public bool Unknown8 => BitField0E.HasFlag(BitField0EFlags.Unknown8);
    public bool Unknown9 => BitField0E.HasFlag(BitField0EFlags.Unknown9);
    [FieldOffset(0x10)] public int Unknown10;
    [FieldOffset(0x14)] public byte Unknown11;
    [FieldOffset(0x15)] public byte Unknown12;
    [FieldOffset(0x16)] public BitField16Flags BitField16;
    public bool Unknown13 => BitField16.HasFlag(BitField16Flags.Unknown13);
    public bool Unknown14 => BitField16.HasFlag(BitField16Flags.Unknown14);
    [FieldOffset(0x18)] public int Unknown15;
    [FieldOffset(0x1C)] public byte Unknown16;
    [FieldOffset(0x1D)] public byte Unknown17;
    [FieldOffset(0x1E)] public BitField1EFlags BitField1E;
    public bool Unknown18 => BitField1E.HasFlag(BitField1EFlags.Unknown18);
    public bool Unknown19 => BitField1E.HasFlag(BitField1EFlags.Unknown19);
    [FieldOffset(0x20)] public int Unknown20;
    [FieldOffset(0x24)] public int Unknown21;
    [FieldOffset(0x28)] public byte Unknown22;
    [FieldOffset(0x29)] public byte Unknown23;
    [FieldOffset(0x2A)] public byte Unknown24;
    [FieldOffset(0x2B)] public byte Unknown25;
    [FieldOffset(0x2C)] public byte Unknown26;
    [FieldOffset(0x2D)] public byte Unknown27;
    [FieldOffset(0x2E)] public byte Unknown28;
    [FieldOffset(0x2F)] public byte Unknown29;
    [FieldOffset(0x30)] public byte Unknown30;
    [FieldOffset(0x31)] public byte Unknown31;
    [FieldOffset(0x32)] public byte Unknown32;
    [FieldOffset(0x33)] public byte Unknown33;
    [FieldOffset(0x34)] public bool Unknown34;

    [Flags]
    public enum BitField06Flags : byte {
    	Unknown3 = 1 << 0,
    	Unknown4 = 1 << 1,
    }
    [Flags]
    public enum BitField0EFlags : byte {
    	Unknown8 = 1 << 0,
    	Unknown9 = 1 << 1,
    }
    [Flags]
    public enum BitField16Flags : byte {
    	Unknown13 = 1 << 0,
    	Unknown14 = 1 << 1,
    }
    [Flags]
    public enum BitField1EFlags : byte {
    	Unknown18 = 1 << 0,
    	Unknown19 = 1 << 1,
    }
}
