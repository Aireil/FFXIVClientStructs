// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x14)]
public unsafe partial struct EObj {
    [FieldOffset(0x00)] public uint Data;
    /// <remarks>ExportedSG</remarks>
    [FieldOffset(0x04)] public ushort SgbPath;
    [FieldOffset(0x06)] public byte PopType;
    [FieldOffset(0x07)] public byte Invisibility;
    [FieldOffset(0x08)] public byte EventHighAddition;
    [FieldOffset(0x09)] public byte Unknown0;
    [FieldOffset(0x0A)] public bool Unknown1;
    [FieldOffset(0x0B)] public bool Unknown2;
    [FieldOffset(0x0C)] public bool Unknown3;
    [FieldOffset(0x0D)] public bool Unknown4;
    [FieldOffset(0x0E)] public bool Unknown5;
    [FieldOffset(0x0F)] public bool Unknown6;
    [FieldOffset(0x10)] public bool Unknown7;
    [FieldOffset(0x11)] public bool Unknown8;
    [FieldOffset(0x12)] public BitField12Flags BitField12;
    public bool EyeCollision => BitField12.HasFlag(BitField12Flags.EyeCollision);
    public bool DirectorControl => BitField12.HasFlag(BitField12Flags.DirectorControl);
    public bool Target => BitField12.HasFlag(BitField12Flags.Target);
    public bool Unknown9 => BitField12.HasFlag(BitField12Flags.Unknown9);
    public bool AddedIn53 => BitField12.HasFlag(BitField12Flags.AddedIn53);
    public bool Unknown10 => BitField12.HasFlag(BitField12Flags.Unknown10);

    [Flags]
    public enum BitField12Flags : byte {
    	EyeCollision = 1 << 0,
    	DirectorControl = 1 << 1,
    	Target = 1 << 2,
    	Unknown9 = 1 << 3,
    	AddedIn53 = 1 << 4,
    	Unknown10 = 1 << 5,
    }
}
