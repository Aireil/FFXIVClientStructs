// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x18)]
public unsafe partial struct ModelChara {
    [FieldOffset(0x00)] public float Unknown0;
    [FieldOffset(0x04)] public float Unknown1;
    [FieldOffset(0x08)] public ushort Model;
    [FieldOffset(0x0A)] public ushort SEPack;
    [FieldOffset(0x0C)] public byte Type;
    [FieldOffset(0x0D)] public byte Base;
    [FieldOffset(0x0E)] public byte Variant;
    [FieldOffset(0x0F)] public byte Unknown2;
    [FieldOffset(0x10)] public byte Unknown3;
    [FieldOffset(0x11)] public byte Unknown4;
    [FieldOffset(0x12)] public byte Unknown5;
    [FieldOffset(0x13)] public byte Unknown14;
    [FieldOffset(0x14)] public byte Unknown_70;
    [FieldOffset(0x15)] public sbyte Unknown6;
    [FieldOffset(0x16)] public BitField16Flags BitField16;
    public bool Unknown7 => BitField16.HasFlag(BitField16Flags.Unknown7);
    public bool PapVariation => BitField16.HasFlag(BitField16Flags.PapVariation);
    public bool Unknown8 => BitField16.HasFlag(BitField16Flags.Unknown8);
    public bool Unknown9 => BitField16.HasFlag(BitField16Flags.Unknown9);
    public bool Unknown10 => BitField16.HasFlag(BitField16Flags.Unknown10);
    public bool Unknown11 => BitField16.HasFlag(BitField16Flags.Unknown11);
    public bool Unknown12 => BitField16.HasFlag(BitField16Flags.Unknown12);
    public bool Unknown13 => BitField16.HasFlag(BitField16Flags.Unknown13);

    [Flags]
    public enum BitField16Flags : byte {
    	Unknown7 = 1 << 0,
    	PapVariation = 1 << 1,
    	Unknown8 = 1 << 2,
    	Unknown9 = 1 << 3,
    	Unknown10 = 1 << 4,
    	Unknown11 = 1 << 5,
    	Unknown12 = 1 << 6,
    	Unknown13 = 1 << 7,
    }
}
