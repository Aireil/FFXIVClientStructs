// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x24)]
public unsafe partial struct Status {
    [FieldOffset(0x00)] public int Name_Offset;
    [FieldOffset(0x04)] public int Description_Offset;
    [FieldOffset(0x08)] public uint Icon;
    [FieldOffset(0x0C)] public int ParamModifier;
    /// <remarks>StatusLoopVFX</remarks>
    [FieldOffset(0x10)] public ushort VFX;
    [FieldOffset(0x12)] public ushort Log;
    [FieldOffset(0x14)] public byte Unknown0;
    [FieldOffset(0x15)] public byte MaxStacks;
    /// <remarks>ClassJobCategory</remarks>
    [FieldOffset(0x16)] public byte ClassJobCategory;
    [FieldOffset(0x17)] public byte StatusCategory;
    /// <remarks>StatusHitEffect</remarks>
    [FieldOffset(0x18)] public byte HitEffect;
    [FieldOffset(0x19)] public byte PartyListPriority;
    [FieldOffset(0x1A)] public byte CanIncreaseRewards;
    [FieldOffset(0x1B)] public byte ParamEffect;
    [FieldOffset(0x1C)] public byte TargetType;
    [FieldOffset(0x1D)] public byte Flags;
    [FieldOffset(0x1E)] public byte Flag2;
    [FieldOffset(0x1F)] public byte Unknown_70_1;
    [FieldOffset(0x20)] public sbyte Unknown2;
    [FieldOffset(0x21)] public BitField21Flags BitField21;
    public bool LockMovement => BitField21.HasFlag(BitField21Flags.LockMovement);
    public bool Unknown3 => BitField21.HasFlag(BitField21Flags.Unknown3);
    public bool LockActions => BitField21.HasFlag(BitField21Flags.LockActions);
    public bool LockControl => BitField21.HasFlag(BitField21Flags.LockControl);
    public bool Transfiguration => BitField21.HasFlag(BitField21Flags.Transfiguration);
    public bool IsGaze => BitField21.HasFlag(BitField21Flags.IsGaze);
    public bool CanDispel => BitField21.HasFlag(BitField21Flags.CanDispel);
    public bool InflictedByActor => BitField21.HasFlag(BitField21Flags.InflictedByActor);
    [FieldOffset(0x22)] public BitField22Flags BitField22;
    public bool IsPermanent => BitField22.HasFlag(BitField22Flags.IsPermanent);
    public bool NoLogVfx => BitField22.HasFlag(BitField22Flags.NoLogVfx);
    public bool Unknown5 => BitField22.HasFlag(BitField22Flags.Unknown5);
    public bool CanStatusOff => BitField22.HasFlag(BitField22Flags.CanStatusOff);
    public bool IsFcBuff => BitField22.HasFlag(BitField22Flags.IsFcBuff);
    public bool Invisibility => BitField22.HasFlag(BitField22Flags.Invisibility);
    public bool Unknown6 => BitField22.HasFlag(BitField22Flags.Unknown6);
    public bool Unknown_70_2 => BitField22.HasFlag(BitField22Flags.Unknown_70_2);

    [Flags]
    public enum BitField21Flags : byte {
    	LockMovement = 1 << 0,
    	Unknown3 = 1 << 1,
    	LockActions = 1 << 2,
    	LockControl = 1 << 3,
    	Transfiguration = 1 << 4,
    	IsGaze = 1 << 5,
    	CanDispel = 1 << 6,
    	InflictedByActor = 1 << 7,
    }
    [Flags]
    public enum BitField22Flags : byte {
    	IsPermanent = 1 << 0,
    	NoLogVfx = 1 << 1,
    	Unknown5 = 1 << 2,
    	CanStatusOff = 1 << 3,
    	IsFcBuff = 1 << 4,
    	Invisibility = 1 << 5,
    	Unknown6 = 1 << 6,
    	Unknown_70_2 = 1 << 7,
    }
}
