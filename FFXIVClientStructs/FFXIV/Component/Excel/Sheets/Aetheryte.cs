// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x38)]
public unsafe partial struct Aetheryte {
    [FieldOffset(0x00)] public int Singular_Offset;
    [FieldOffset(0x04)] public int Plural_Offset;
    [FieldOffset(0x08)] public sbyte Adjective;
    [FieldOffset(0x09)] public sbyte PossessivePronoun;
    [FieldOffset(0x0A)] public sbyte StartsWithVowel;
    [FieldOffset(0x0B)] public sbyte Unknown0;
    [FieldOffset(0x0C)] public sbyte Pronoun;
    [FieldOffset(0x0D)] public sbyte Article;
    [FieldOffset(0x10)] public int Unknown1_Offset;
    [FieldOffset(0x14), FixedSizeArray] internal FixedSizeArray4<uint> _level;
    /// <remarks>Quest</remarks>
    [FieldOffset(0x24)] public uint RequiredQuest;
    /// <remarks>PlaceName</remarks>
    [FieldOffset(0x28)] public ushort PlaceName;
    /// <remarks>PlaceName</remarks>
    [FieldOffset(0x2A)] public ushort AethernetName;
    /// <remarks>TerritoryType</remarks>
    [FieldOffset(0x2C)] public ushort Territory;
    /// <remarks>Map</remarks>
    [FieldOffset(0x2E)] public ushort Map;
    [FieldOffset(0x30)] public short AetherstreamX;
    [FieldOffset(0x32)] public short AetherstreamY;
    [FieldOffset(0x34)] public byte AethernetGroup;
    [FieldOffset(0x35)] public byte Order;
    [FieldOffset(0x36)] public byte Unknown2;
    [FieldOffset(0x37)] public BitField37Flags BitField37;
    public bool IsAetheryte => BitField37.HasFlag(BitField37Flags.IsAetheryte);
    public bool Invisible => BitField37.HasFlag(BitField37Flags.Invisible);

    [Flags]
    public enum BitField37Flags : byte {
    	IsAetheryte = 1 << 0,
    	Invisible = 1 << 1,
    }
}
