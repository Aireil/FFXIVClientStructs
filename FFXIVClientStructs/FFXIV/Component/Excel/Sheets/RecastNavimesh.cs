// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x80)]
public unsafe partial struct RecastNavimesh {
    [FieldOffset(0x00)] public int Unknown0_Offset;
    [FieldOffset(0x04)] public float TileSize;
    [FieldOffset(0x08)] public float CellSize;
    [FieldOffset(0x0C)] public float CellHeight;
    [FieldOffset(0x10)] public float AgentHeight;
    [FieldOffset(0x14)] public float AgentRadius;
    [FieldOffset(0x18)] public float AgentMaxClimb;
    [FieldOffset(0x1C)] public float AgentMaxSlope;
    [FieldOffset(0x20)] public float RegionMinSize;
    [FieldOffset(0x24)] public float RegionMergedSize;
    [FieldOffset(0x28)] public float MaxEdgeLength;
    [FieldOffset(0x2C)] public float MaxEdgeError;
    [FieldOffset(0x30)] public float VertsPerPoly;
    [FieldOffset(0x34)] public float DetailMeshSampleDistance;
    [FieldOffset(0x38)] public float DetailMeshMaxSampleError;
    [FieldOffset(0x3C)] public float Unknown1;
    [FieldOffset(0x40)] public float Unknown2;
    [FieldOffset(0x44)] public float Unknown3;
    [FieldOffset(0x48)] public float Unknown4;
    [FieldOffset(0x4C)] public float Unknown5;
    [FieldOffset(0x50)] public float Unknown6;
    [FieldOffset(0x54)] public float Unknown7;
    [FieldOffset(0x58)] public float Unknown8;
    [FieldOffset(0x5C)] public float Unknown9;
    [FieldOffset(0x60)] public float Unknown10;
    [FieldOffset(0x64)] public float Unknown11;
    [FieldOffset(0x68)] public float Unknown12;
    [FieldOffset(0x6C)] public float Unknown13;
    [FieldOffset(0x70)] public float Unknown14;
    [FieldOffset(0x74)] public float Unknown15;
    [FieldOffset(0x78)] public float Unknown16;
    [FieldOffset(0x7C)] public BitField7CFlags BitField7C;
    public bool Unknown17 => BitField7C.HasFlag(BitField7CFlags.Unknown17);
    public bool Unknown18 => BitField7C.HasFlag(BitField7CFlags.Unknown18);
    public bool Unknown19 => BitField7C.HasFlag(BitField7CFlags.Unknown19);
    public bool Unknown20 => BitField7C.HasFlag(BitField7CFlags.Unknown20);

    [Flags]
    public enum BitField7CFlags : byte {
    	Unknown17 = 1 << 0,
    	Unknown18 = 1 << 1,
    	Unknown19 = 1 << 2,
    	Unknown20 = 1 << 3,
    }
}
