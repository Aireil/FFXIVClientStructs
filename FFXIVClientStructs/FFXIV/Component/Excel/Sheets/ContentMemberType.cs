// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[StructLayout(LayoutKind.Explicit, Size = 0x0C)]
public unsafe partial struct ContentMemberType {
    [FieldOffset(0x00)] public byte Unknown0;
    [FieldOffset(0x01)] public byte Unknown1;
    [FieldOffset(0x02)] public byte Unknown2;
    [FieldOffset(0x03)] public byte Unknown3;
    [FieldOffset(0x04)] public byte Unknown4;
    [FieldOffset(0x05)] public byte Unknown5;
    [FieldOffset(0x06)] public byte Unknown6;
    [FieldOffset(0x07)] public byte TanksPerParty;
    [FieldOffset(0x08)] public byte HealersPerParty;
    [FieldOffset(0x09)] public byte MeleesPerParty;
    [FieldOffset(0x0A)] public byte RangedPerParty;
    [FieldOffset(0x0B)] public BitField0BFlags BitField0B;
    public bool Unknown7 => BitField0B.HasFlag(BitField0BFlags.Unknown7);
    public bool Unknown8 => BitField0B.HasFlag(BitField0BFlags.Unknown8);
    public bool Unknown9 => BitField0B.HasFlag(BitField0BFlags.Unknown9);
    public bool Unknown10 => BitField0B.HasFlag(BitField0BFlags.Unknown10);
    public bool Unknown11 => BitField0B.HasFlag(BitField0BFlags.Unknown11);
    public bool Unknown12 => BitField0B.HasFlag(BitField0BFlags.Unknown12);
    public bool Unknown13 => BitField0B.HasFlag(BitField0BFlags.Unknown13);
    public bool Unknown14 => BitField0B.HasFlag(BitField0BFlags.Unknown14);

    [Flags]
    public enum BitField0BFlags : byte {
    	Unknown7 = 1 << 0,
    	Unknown8 = 1 << 1,
    	Unknown9 = 1 << 2,
    	Unknown10 = 1 << 3,
    	Unknown11 = 1 << 4,
    	Unknown12 = 1 << 5,
    	Unknown13 = 1 << 6,
    	Unknown14 = 1 << 7,
    }
}
