// <auto-generated/>
namespace FFXIVClientStructs.FFXIV.Component.Excel.Sheets;

[GenerateInterop]
[StructLayout(LayoutKind.Explicit, Size = 0x1C)]
public unsafe partial struct Pet {
    [FieldOffset(0x00)] public int Name_Offset;
    [FieldOffset(0x04), FixedSizeArray] internal FixedSizeArray4<ushort> _abilities;
    /// <remarks>Action</remarks>
    [FieldOffset(0x0C)] public ushort AutoAction;
    [FieldOffset(0x0E)] public byte SmallScalePercentage;
    [FieldOffset(0x0F)] public byte MediumScalePercentage;
    [FieldOffset(0x10)] public byte LargeScalePercentage;
    [FieldOffset(0x11)] public byte Unknown8;
    [FieldOffset(0x12)] public byte Unknown9;
    [FieldOffset(0x13)] public byte Unknown10;
    [FieldOffset(0x14)] public byte Unknown11;
    [FieldOffset(0x15)] public byte Unknown12;
    [FieldOffset(0x16)] public byte Unknown13;
    [FieldOffset(0x17)] public sbyte Unknown14;
    [FieldOffset(0x18)] public BitField18Flags BitField18;
    public bool Unknown15 => BitField18.HasFlag(BitField18Flags.Unknown15);
    public bool NonCombatSummon => BitField18.HasFlag(BitField18Flags.NonCombatSummon);
    public bool Unknown17 => BitField18.HasFlag(BitField18Flags.Unknown17);

    [Flags]
    public enum BitField18Flags : byte {
    	Unknown15 = 1 << 0,
    	NonCombatSummon = 1 << 1,
    	Unknown17 = 1 << 2,
    }
}
