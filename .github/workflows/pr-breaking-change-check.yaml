name: Breaking Change Check

on:
  pull_request:
    branches:
      - main
    paths:
      - 'FFXIVClientStructs/**/*.cs'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}
    - name: Install dependencies for main branch
      run: dotnet restore
    - name: Build main branch
      run: dotnet build FFXIVClientStructs/FFXIVClientStructs.csproj --output ida/cs-main/
    - name: Switch to PR branch
      run: git checkout ${{ github.head_ref }}
    - name: Install dependencies for PR branch
      run: dotnet restore
    - name: Build PR branch
      run: dotnet build FFXIVClientStructs/FFXIVClientStructs.csproj --output ida/cs-pr/
    - name: Check for breaking changes
      id: breaking_changes
      run: |
        dotnet tool install -g Microsoft.DotNet.ApiCompat.Tool
        testout=$(apicompat -l ida/cs-main/FFXIVClientStructs.dll -r ida/cs-pr/FFXIVClientStructs.dll)
        if [ "$testout" != "" ]; then
          echo "Breaking changes detected"
          echo "breaking=true" >> $GITHUB_OUTPUT
        else
          echo "No breaking changes detected"
          echo "breaking=false" >> $GITHUB_OUTPUT
        fi
    - name: Add tag to PR
      if: steps.breaking_changes.outputs.breaking == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ["breaking change"]
          })